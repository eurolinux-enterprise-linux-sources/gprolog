# *********************************
# * autoconf configuration script *
# *********************************

# if you change here the version also change it in PROLOG_VERSION below

AC_INIT(gprolog, 1.3.1, bug-prolog@gnu.org)
AC_PREREQ(2.52)
# AC_CONFIG_AUX_DIR(ConfUtils) to do...
AC_CONFIG_SRCDIR(SETVARS)


# ***************************
# * initial variable values *
# ***************************

PROLOG_NAME='GNU Prolog'
PROLOG_NAME1='gprolog'
PROLOG_VERSION='1.3.1'
PROLOG_DATE='Feb 10 2009'
PROLOG_COPYRIGHT='Copyright (C) 1999-2009 Daniel Diaz'

TOP_LEVEL=$PROLOG_NAME1
GPLC=gplc
HEXGPLC=hexgplc
ENV_VARIABLE=PL_PATH

USE_EBP=no
USE_LINEDIT=yes
USE_GUI_CONSOLE=yes
USE_SOCKETS=yes
USE_FD_SOLVER=yes

DLL_W32GUICONS=w32guicons
LIB_LINEDIT=liblinedit
LIB_ENGINE_PL=libengine_pl
LIB_BIPS_PL=libbips_pl
LIB_ENGINE_FD=libengine_fd
LIB_BIPS_FD=libbips_fd

# ******************
# * variable names *
# ******************

AC_SUBST(PROLOG_NAME1)
AC_SUBST(PROLOG_NAME)
AC_SUBST(PROLOG_VERSION)
AC_SUBST(PROLOG_DATE)
AC_SUBST(PROLOG_COPYRIGHT)

AC_SUBST(TOP_LEVEL)
AC_SUBST(GPLC)
AC_SUBST(HEXGPLC)
AC_SUBST(ENV_VARIABLE)
AC_SUBST(TOP_LEVEL_FLAGS)

AC_SUBST(CFLAGS_PREFIX_REG)
AC_SUBST(CFLAGS_MACHINE)
AC_SUBST(CFLAGS_UNSIGNED_CHAR)
AC_SUBST(LDLIBS)
AC_SUBST(LDGUILIBS)

AC_SUBST(ASM_SUFFIX)
AC_SUBST(OBJ_SUFFIX)
AC_SUBST(EXE_SUFFIX)
AC_SUBST(CC_OBJ_NAME_OPT)
AC_SUBST(CC_EXE_NAME_OPT)
AC_SUBST(AR_RC)
AC_SUBST(AR_SEP)
AC_SUBST(AS)
AC_SUBST(STRIP)

AC_SUBST(RC)
AC_SUBST(RCFLAGS)
AC_SUBST(RC_OUT_NAME_OPT)
AC_SUBST(LD)
AC_SUBST(LD_OUT_NAME_OPT)
AC_SUBST(LD_DLL_NAME_OPT)

AC_SUBST(ROOT_DIR)
AC_SUBST(ROOT_DIR1)
AC_SUBST(PKG_NAME)
AC_SUBST(INSTALL_DIR)
AC_SUBST(LINKS_DIR)
AC_SUBST(DOC_DIR)
AC_SUBST(HTML_DIR)
AC_SUBST(EXAMPLES_DIR)

AC_SUBST(WIN_TMP_DIR)
AC_SUBST(WIN_CONF_OPT)

AC_SUBST(TXT_FILES)
AC_SUBST(BIN_FILES)
AC_SUBST(OBJ_FILES)
AC_SUBST(LIB_FILES)
AC_SUBST(INC_FILES)
AC_SUBST(DOC_FILES)
AC_SUBST(HTML_FILES)
AC_SUBST(EXPL_FILES)
AC_SUBST(EXC_FILES)
AC_SUBST(EXFD_FILES)

AC_SUBST(MAKE_LE_DIRS)
AC_SUBST(MAKE_W32GC_DIRS)
AC_SUBST(MAKE_FD_DIRS)

AC_SUBST(MAKE_LE_INTERF_OBJS)
AC_SUBST(MAKE_SOCKETS_OBJS)

AC_SUBST(DLL_W32GUICONS)
AC_SUBST(LIB_LINEDIT)
AC_SUBST(LIB_ENGINE_PL)
AC_SUBST(LIB_BIPS_PL)
AC_SUBST(LIB_ENGINE_FD)
AC_SUBST(LIB_BIPS_FD)


# *******************
# * package options *
# *******************


AC_ARG_WITH(install-dir, [  --with-install-dir=DIR  specify INSTALL_DIR],
                [WITH_INSTALL_DIR="$withval"])

AC_ARG_WITH(links-dir,   [  --with-links-dir=DIR    specify LINKS_DIR],
                [WITH_LINKS_DIR="$withval"])

AC_ARG_WITH(doc-dir,     [  --with-doc-dir=DIR      specify DOC_DIR],
                [WITH_DOC_DIR="$withval"])

AC_ARG_WITH(html-dir,    [  --with-html-dir=DIR     specify HTML_DIR],
                [WITH_HTML_DIR="$withval"])

AC_ARG_WITH(examples-dir,[  --with-examples-dir=DIR specify EXAMPLES_DIR],
                [WITH_EXAMPLES_DIR="$withval"])

AC_ARG_WITH(msvc,        [  --with-msvc             use MS VC++],
                [WITH_MSVC="$withval"],
                [WITH_MSVC=no])

AC_ARG_WITH(c-flags,     [[  --with-c-flags[=FLAGS]  specify C flags]],
                [WITH_C_FLAGS="$withval"],
                [WITH_C_FLAGS=yes])

AC_ARG_ENABLE(regs,      [  --disable-regs          do not use machine registers],
              [case "$enableval" in
                   no) AC_DEFINE(NO_USE_REGS);;
                   *)  ;;
               esac])

AC_ARG_ENABLE(ebp,      [  --enable-ebp            use the ebp register on ix86 machines],
              [case "$enableval" in
                   yes) USE_EBP=yes;;
                   *)   ;;
               esac])

AC_ARG_ENABLE(fast-call, [  --disable-fast-call     do not use fast call on ix86],
              [case "$enableval" in
                   no) AC_DEFINE(NO_USE_FAST_CALL);;
                   *)  ;;
               esac])

AC_ARG_ENABLE(linedit,   [  --disable-linedit       do not include line editor facility],
              [case "$enableval" in
                   no) AC_DEFINE(NO_USE_LINEDIT) USE_LINEDIT=no;;
                   *)  ;;
               esac])


AC_ARG_ENABLE(piped-consult, [  --disable-piped-consult do not pipe stdin of pl2wam when consult/1],
              [case "$enableval" in
                   no) AC_DEFINE(NO_USE_PIPED_STDIN_FOR_CONSULT);;
                   *)  ;;
               esac])


AC_ARG_ENABLE(gui-console,[  --disable-gui-console   do not use the Win32 GUI console],
              [case "$enableval" in
                   no) AC_DEFINE(NO_USE_GUI_CONSOLE) USE_GUI_CONSOLE=no;;
                   *)  USE_GUI_CONSOLE=yes;;
               esac])

AC_ARG_ENABLE(sockets,   [  --disable-sockets       do not include sockets facility],
              [case "$enableval" in
                   no) AC_DEFINE(NO_USE_SOCKETS)  USE_SOCKETS=no;;
                   *)  ;;
               esac])

AC_ARG_ENABLE(fd-solver, [  --disable-fd-solver     do not include the FD constraint solver],
              [case "$enableval" in
                   no) AC_DEFINE(NO_USE_FD_SOLVER) USE_FD_SOLVER=no;;
                   *)  ;;
               esac])

if test "$USE_EBP" = no; then
        AC_DEFINE(NO_USE_EBP)
fi



# ***********************
# * checks for programs *
# ***********************

if test "$WITH_MSVC" != no; then
    echo "using MSVC++ as C compiler"
    CC=cl
    WIN_CONF_OPT=--with-msvc
fi

# should be always done to correctly set EXEEXT (CC is set to cl for MSVC)
# cannot be put in the then and the else part !!! so repeat the test !

AC_PROG_CC


if test "$WITH_MSVC" != no; then
    ASM_SUFFIX='.s'
    OBJ_SUFFIX='.obj'
    LIB_SUFFIX='.lib'
    CC_OBJ_NAME_OPT='-Fo'
    CC_EXE_NAME_OPT='-Fe'
    AC_CHECK_PROGS(MINGWAS, mingw-as,no)
    if test "$MINGWAS" = no; then
        AC_MSG_ERROR([mingw-as.exe (MinGW as.exe) is required with MSVC++ - A version can be found at gprolog.univ-paris1.fr/download/mingw-as.exe])
    fi
    AS=mingw-as
    AR_RC='lib -nologo -out:'
    AR_SEP=''
    STRIP=:
    RANLIB=:
    RC=rc
    RCFLAGS=''
    RC_OUT_NAME_OPT='-fo'
    LD=link
    LD_OUT_NAME_OPT='-out:'
    LD_DLL_NAME_OPT='-dll'
else
    if test "$GCC" != yes; then
        AC_MSG_ERROR([gcc is required (or MSVC++ under win32)])
    fi
    case "$host" in
	x86_64*solaris*)
	    AS='gas --64'
        ;;
	*)
	    if test "$with_gas" = yes; then
		AS=gas
	    else
		AS=as
	    fi
        ;;
    esac
    AC_PROG_RANLIB
    ASM_SUFFIX='.s'
    OBJ_SUFFIX='.o'
    LIB_SUFFIX='.a'
    CC_OBJ_NAME_OPT='-o '
    CC_EXE_NAME_OPT='-o '
    RC='windres'
    RCFLAGS='-O coff'
    RC_OUT_NAME_OPT='-o '
    LD=gcc
    LD_OUT_NAME_OPT='-o '
    LD_DLL_NAME_OPT='-shared'
    AR_RC='ar rc '
    AR_SEP=' '
    STRIP=strip
fi

EXE_SUFFIX=$EXEEXT
AC_PROG_MAKE_SET
AC_PROG_INSTALL
AC_PROG_LN_S

DLL_W32GUICONS=$DLL_W32GUICONS.dll
LIB_LINEDIT=$LIB_LINEDIT$LIB_SUFFIX
LIB_ENGINE_PL=$LIB_ENGINE_PL$LIB_SUFFIX
LIB_BIPS_PL=$LIB_BIPS_PL$LIB_SUFFIX
LIB_ENGINE_FD=$LIB_ENGINE_FD$LIB_SUFFIX
LIB_BIPS_FD=$LIB_BIPS_FD$LIB_SUFFIX



# *******************************
# * host detection and features *
# *******************************

AC_CANONICAL_HOST

# determine windows path associated to posix path /tmp

case "$host_os" in
    cygwin*)  WIN_TMP_DIR=`cygpath -d -a /tmp`;;
    mingw*)   WIN_TMP_DIR=`cd /tmp;pwd -W|sed -e 's:/:\\\:g'`;;
esac

if test "$WITH_MSVC" != no; then
    
    AC_DEFINE(M_ix86)
    AC_DEFINE(M_win32)
    AC_DEFINE(M_ix86_win32)
    host_vendor=Microsoft
    host_os=win32
    WIN32=yes

else
    
    WIN32=no
    case "$host_cpu" in
        mips*)          AC_DEFINE(M_mips);;
        alpha*)         AC_DEFINE(M_alpha);;
        sparc*)         AC_DEFINE(M_sparc);;
        x86_64)         AC_DEFINE(M_x86_64);;
        i*86)           AC_DEFINE(M_ix86);;
        powerpc*|ppc*)  AC_DEFINE(M_powerpc);;
    esac
    
    case "$host_os" in
        *osf*)          AC_DEFINE(M_osf);;
        irix*)          AC_DEFINE(M_irix);;
        sunos*)         AC_DEFINE(M_sunos);;
        solaris*)       AC_DEFINE(M_solaris);;
        linux*)         AC_DEFINE(M_linux);;
        cygwin*)        AC_DEFINE(M_cygwin);;
        mingw*)         AC_DEFINE(M_mingw) MINGW=yes; WIN32=yes;;
        *sco*)          AC_DEFINE(M_sco);;
        *bsd*)          AC_DEFINE(M_bsd);;
        *darwin*)       AC_DEFINE(M_darwin);;
    esac
    
    case "$host" in
        mips*irix*)      AC_DEFINE(M_mips_irix);;
        sparc*sunos*)    AC_DEFINE(M_sparc_sunos);;
        sparc*solaris*)  AC_DEFINE(M_sparc_solaris);;
        sparc*bsd*)      AC_DEFINE(M_sparc_bsd);;
        alpha*osf*)      AC_DEFINE(M_alpha_osf);;
        alpha*linux*)    AC_DEFINE(M_alpha_linux);;
        x86_64*linux*)   AC_DEFINE(M_x86_64_linux);;
        x86_64*bsd*)     AC_DEFINE(M_x86_64_bsd);;
        x86_64*solaris*) AC_DEFINE(M_x86_64_solaris);;
        i*86*linux*)     AC_DEFINE(M_ix86_linux);;
        i*86*solaris*)   AC_DEFINE(M_ix86_solaris);;
        i*86*sco*)       AC_DEFINE(M_ix86_sco);;
        i*86*bsd*)       AC_DEFINE(M_ix86_bsd);;
        i*86*cygwin*)    AC_DEFINE(M_ix86_cygwin);;
        i*86*mingw*)     AC_DEFINE(M_ix86_mingw);;
        i*86*darwin*)    AC_DEFINE(M_ix86_darwin);;
        powerpc*linux*)  AC_DEFINE(M_powerpc_linux);;
        powerpc*darwin*) AC_DEFINE(M_powerpc_darwin);;
        powerpc*bsd*)    AC_DEFINE(M_powerpc_bsd);;
        *)               AC_MSG_ERROR(unsupported architecture)
    esac

fi



AC_CHECK_SIZEOF(long)
AC_CHECK_HEADERS(sys/ioctl_compat.h termios.h malloc.h)
AC_FUNC_MMAP 
AC_CHECK_FUNCS(mprotect mallopt fgetc)


# -------------------
# Check for socklen_t
# -------------------

AC_MSG_CHECKING(for socklen_t)
AC_TRY_COMPILE([#include <sys/types.h>
#include <sys/socket.h>
], [socklen_t x;
], [AC_MSG_RESULT(yes)], [
AC_TRY_COMPILE([#include <sys/types.h>
#include <sys/socket.h>
], [int accept(int, struct sockaddr *, size_t *);
], [
AC_MSG_RESULT(size_t)
AC_DEFINE(socklen_t, size_t)], [
AC_MSG_RESULT(int)
AC_DEFINE(socklen_t, int)])])


# -----------------------------------
# Check if linux needs asm/sigcontext
# -----------------------------------

case "$host_os" in
     linux*)

AC_MSG_CHECKING(if struct sigcontext needs asm/sigcontext.h)
AC_TRY_COMPILE([#include <signal.h>
], [struct sigcontext p;
], [AC_MSG_RESULT(no)], 
[
AC_MSG_RESULT(yes)
AC_DEFINE(LINUX_NEEDS_ASM_SIGCONTEXT)]) 
esac



# ********************
# * C compiler flags *
# ********************

CFLAGS_MACHINE=
CFLAGS_PREFIX_REG=

AC_C_INLINE

if test "$WITH_MSVC" != no; then
    
    case "$WITH_C_FLAGS" in
        debug) CFLAGS='-W3 -ZI -EHsc';;
        no)    CFLAGS='';;
        yes)   CFLAGS='-O2 -EHsc';;
        *)     CFLAGS="$WITH_C_FLAGS";;
    esac
    
    CFLAGS_UNSIGNED_CHAR='-J'
    CFLAGS_MACHINE='-nologo -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE'

else
    
    case "$WITH_C_FLAGS" in
        debug) CFLAGS='-g -Wall';;
        no)    CFLAGS='';;
        yes)   CFLAGS='-O3 -fomit-frame-pointer';;
        *)     CFLAGS="$WITH_C_FLAGS";;
    esac

# -fomit-frame-pointer does not work on MinGW (tested with gcc 3.3.3)
    if test "$MINGW-$WITH_C_FLAGS" = yes-yes; then
	CFLAGS='-O3'
    fi
    
    CFLAGS_PREFIX_REG='-ffixed-%s'
    CFLAGS_UNSIGNED_CHAR='-funsigned-char'
    
    CFLAGS_MACHINE=
    case "$host" in
        mips*irix*)        CFLAGS_MACHINE='-march=4000';;
        *sparc*sunos4.1.3) CFLAGS_MACHINE='-msupersparc';;
        *sparc*solaris)    CFLAGS_MACHINE='-msupersparc';;
        i686*)             CFLAGS_MACHINE='-march=pentiumpro';;
        i586*)             CFLAGS_MACHINE='-march=pentium';;
        i*86*)             CFLAGS_MACHINE='-march=i486';;
        powerpc*darwin*)   CFLAGS_MACHINE='-mpowerpc -no-cpp-precomp';;
        x86_64*solaris*)   CFLAGS_MACHINE='-m64';;
    esac
    
    case "$host" in
        i*86*) if test "$USE_EBP" != no; then
                    CF1=`echo $CFLAGS | sed -e 's/\(.*\)-fomit-frame-pointer\(.*\)/\1\2/'`
                    if test "$CF1" != "$CFLAGS"; then
                        echo use ebp and move -fomit-frame-pointer to CFLAGS_MACHINE
                        CFLAGS=$CF1
                        CFLAGS_MACHINE="$CFLAGS_MACHINE -fomit-frame-pointer"
                    else
                        echo do not use ebp since -fomit-frame-pointer is not specified in CFLAGS
                        USE_EBP=no
                        AC_DEFINE(NO_USE_EBP)
                    fi
               fi;;
    esac


#    case "$host" in
#       i*86*) CFLAGS_MACHINE="$CFLAGS_MACHINE -malign-loops=2 -malign-jumps=2 -malign-functions=2";;
#    esac


# For MacOsX - try to avoid this (activate only for fast library fix)
#    case "$host" in
#       powerpc*darwin*)        RANLIB="$RANLIB -c";;
#    esac

fi



# ********************
# * libraries to add *
# ********************

if test "$WITH_MSVC" != no; then
    LDFLAGS='-nologo -F8000000'
fi

make_lib_list()
{
    list=''
    if test $CC = cl -o $CC = lc; then
        for i; do list="$list $i.lib"; done
    else
        for i; do list="$list -l$i"; done
    fi
    echo $list
}

if test $WIN32 = yes; then
    LIB='advapi32 user32'
    GUILIB='kernel32 user32 gdi32 comdlg32 advapi32 comctl32 shell32 ole32 htmlhelp'
# other libs: winspool.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib
    if test "$USE_SOCKETS" = yes; then
        LIB="$LIB ws2_32"
    fi
else
    LIB='m'
    GUILIB=''
    if test "$USE_SOCKETS" = yes; then
        AC_CHECK_FUNC(socket,[],
                AC_CHECK_LIB(socket,socket,LIB="$LIB socket",
                           AC_MSG_ERROR(cannot find socket library)))
    
        AC_CHECK_FUNC(gethostbyname,[],
                AC_CHECK_LIB(nsl,gethostbyname,LIB="$LIB nsl"))
    # (No error here; just assume gethostbyname is in -lsocket.)
    fi
fi

LDLIBS=`make_lib_list $LIB`
LDGUILIBS=`make_lib_list $GUILIB`




# ***********************
# * gp_config.h defines *
# ***********************

AC_DEFINE_UNQUOTED(PROLOG_NAME,      "$PROLOG_NAME")
AC_DEFINE_UNQUOTED(PROLOG_NAME1,     "$PROLOG_NAME1")
AC_DEFINE_UNQUOTED(PROLOG_VERSION,   "$PROLOG_VERSION")
AC_DEFINE_UNQUOTED(PROLOG_DATE,      "$PROLOG_DATE")
AC_DEFINE_UNQUOTED(PROLOG_COPYRIGHT, "$PROLOG_COPYRIGHT")

AC_DEFINE_UNQUOTED(TOP_LEVEL,        "$TOP_LEVEL")
AC_DEFINE_UNQUOTED(GPLC,             "$GPLC")
AC_DEFINE_UNQUOTED(HEXGPLC,          "$HEXGPLC")
AC_DEFINE_UNQUOTED(ENV_VARIABLE,     "$ENV_VARIABLE")

AC_DEFINE_UNQUOTED(M_CPU,            "$host_cpu")
AC_DEFINE_UNQUOTED(M_VENDOR,         "$host_vendor")
AC_DEFINE_UNQUOTED(M_OS,             "$host_os")

AC_DEFINE_UNQUOTED(CC,               "$CC")
AC_DEFINE_UNQUOTED(CFLAGS_PREFIX_REG,"$CFLAGS_PREFIX_REG")
AC_DEFINE_UNQUOTED(CFLAGS,           "$CFLAGS")  
AC_DEFINE_UNQUOTED(CFLAGS_MACHINE,   "$CFLAGS_MACHINE")
AC_DEFINE_UNQUOTED(LDFLAGS,          "$LDFLAGS")
AC_DEFINE_UNQUOTED(LDLIBS,           "$LDLIBS")
AC_DEFINE_UNQUOTED(AS,               "$AS")
AC_DEFINE_UNQUOTED(STRIP,            "$STRIP")

AC_DEFINE_UNQUOTED(ASM_SUFFIX,       "$ASM_SUFFIX")
AC_DEFINE_UNQUOTED(OBJ_SUFFIX,       "$OBJ_SUFFIX")
AC_DEFINE_UNQUOTED(EXE_SUFFIX,       "$EXE_SUFFIX")
AC_DEFINE_UNQUOTED(CC_OBJ_NAME_OPT,  "$CC_OBJ_NAME_OPT")
AC_DEFINE_UNQUOTED(CC_EXE_NAME_OPT,  "$CC_EXE_NAME_OPT")

AC_DEFINE_UNQUOTED(DLL_W32GUICONS,   "$DLL_W32GUICONS")
AC_DEFINE_UNQUOTED(LIB_LINEDIT,      "$LIB_LINEDIT")
AC_DEFINE_UNQUOTED(LIB_ENGINE_PL,    "$LIB_ENGINE_PL")
AC_DEFINE_UNQUOTED(LIB_BIPS_PL,      "$LIB_BIPS_PL")
AC_DEFINE_UNQUOTED(LIB_ENGINE_FD,    "$LIB_ENGINE_FD")
AC_DEFINE_UNQUOTED(LIB_BIPS_FD,      "$LIB_BIPS_FD")



# ***************
# * directories *
# ***************

# a function to compare 2 directories (avoid diff with trailing /)
# does not take into account symlinks...

same_directory()
{
    f1=`dirname $1`/`basename $1`
    f2=`dirname $2`/`basename $2`
    test $f1 = $f2
}

ROOT_DIR=`(cd .. ; pwd)`
if test -x /bin/cygpath.exe; then
    ROOT_DIR1=`cygpath -a -w ..`
else
    ROOT_DIR1=$ROOT_DIR
fi

test "$prefix"      = NONE && prefix=/usr/local
test "$exec_prefix" = NONE && exec_prefix=$prefix

PKG_NAME=$PROLOG_NAME1-$PROLOG_VERSION

# *-------------*
# * INSTALL_DIR *
# *-------------*

if test "$prefix" = in-place -o "$WITH_INSTALL_DIR" = in-place; then
    IN_PLACE=yes
    INSTALL_DIR=$ROOT_DIR
    test -z "$WITH_LINKS_DIR" && WITH_LINKS_DIR=no
else
    IN_PLACE=no
    if test -z "$WITH_INSTALL_DIR"; then
         INSTALL_DIR=$prefix/$PKG_NAME
    else
         INSTALL_DIR=$WITH_INSTALL_DIR
    fi
fi


# *-----------*
# * LINKS_DIR *
# *-----------*

case "$WITH_LINKS_DIR" in
    no) LINKS_DIR=none;;
    '') LINKS_DIR=$exec_prefix/bin;;
    *)  LINKS_DIR=$WITH_LINKS_DIR;;
esac


# *---------*
# * DOC_DIR *
# *---------*

case "$WITH_DOC_DIR" in
    no) DOC_DIR=none;
        test -z "$WITH_HTML_DIR" && WITH_HTML_DIR=$INSTALL_DIR/doc/html_node;;
    '') DOC_DIR=$INSTALL_DIR/doc;;
    *)  DOC_DIR=$WITH_DOC_DIR;;
esac
if same_directory "$DOC_DIR" $ROOT_DIR/doc; then
    DOC_DIR=none
fi


# *----------*
# * HTML_DIR *
# *----------*


case "$WITH_HTML_DIR" in
    no) HTML_DIR=none;;
    '') if test "$DOC_DIR" = none; then
            WITH_HTML_DIR=no;
            HTML_DIR=none
        else
            HTML_DIR=$DOC_DIR/html_node
        fi;;
    *)  HTML_DIR=$WITH_HTML_DIR;;
esac
if same_directory "$HTML_DIR" $ROOT_DIR/doc/html_node; then
    HTML_DIR=none
fi


# *--------------*
# * EXAMPLES_DIR *
# *--------------*

case "$WITH_EXAMPLES_DIR" in
    no) EXAMPLES_DIR=none;;
    '') EXAMPLES_DIR=$INSTALL_DIR;;
    *)  EXAMPLES_DIR=$WITH_EXAMPLES_DIR;;
esac
if same_directory "$EXAMPLES_DIR" $ROOT_DIR; then
    EXAMPLES_DIR=none
fi


# *---------*
# * Summary *
# *---------*

echo 'DIRECTORIES'
echo "--> Installation:       $INSTALL_DIR"
echo "--> Link to binaries:   $LINKS_DIR"
echo "--> Documentation:      $DOC_DIR"
echo "--> HTML documentation: $HTML_DIR"
echo "--> Examples:           $EXAMPLES_DIR"


# ******************
# * sub-components *
# ******************


if test "$IN_PLACE" = no; then
    TXT_FILES='COPYING VERSION NEWS ChangeLog'
else
    TXT_FILES=
fi

BIN_FILES=
OBJ_FILES=
LIB_FILES=

INC_FILES="$PROLOG_NAME1.h fd_to_c.h"
DOC_FILES='???*.dvi ???*.ps ???*.pdf ???*.chm ???*.eps ???*.html ???*.gif'
HTML_FILES='???*.html ???*.gif ???*.css'
EXPL_FILES='Makefile README PROGS ??*.pl'
EXC_FILES='Makefile README ??*.pl ??*_c.c'
EXFD_FILES='Makefile ??*.pl ??*.fd'


B="$GPLC $HEXGPLC $TOP_LEVEL pl2wam wam2ma ma2asm"
O="top_level all_pl_bips debugger"
L="$LIB_ENGINE_PL $LIB_BIPS_PL"

if test "$USE_GUI_CONSOLE" = yes -a \( "$USE_LINEDIT" = no -o "$WIN32" = no \)
then
    AC_DEFINE(NO_USE_GUI_CONSOLE) USE_GUI_CONSOLE=no
fi

if test "$USE_LINEDIT" = yes; then
    MAKE_LE_DIRS='$(LE_DIRS)'
    MAKE_LE_INTERF_OBJS='$(LE_INTERF_OBJS)'
    L="$L $LIB_LINEDIT"
else
    MAKE_LE_DIRS=
    MAKE_LE_INTERF_OBJS='$(NO_LE_INTERF_OBJS)'
fi


if test "$USE_GUI_CONSOLE" = yes; then
    TOP_LEVEL_FLAGS=--gui-console
    MAKE_W32GC_DIRS='$(W32GC_DIRS)'
    O="$O w32gc_interf"
    BIN_FILES="$DLL_W32GUICONS"
else
    TOP_LEVEL_FLAGS=
    MAKE_W32GC_DIRS=
fi

if test "$USE_SOCKETS" = yes; then
    MAKE_SOCKETS_OBJS='$(SOCKETS_OBJS)'
else
    MAKE_SOCKETS_OBJS='$(NO_SOCKETS_OBJS)'
fi

if test "$USE_FD_SOLVER" = yes; then    
    MAKE_FD_DIRS='$(FD_DIRS)'
    B="$B fd2c"
    L="$L $LIB_ENGINE_FD $LIB_BIPS_FD"
    O="$O all_fd_bips"
else
    MAKE_FD_DIRS=
fi

for i in $B; do
    BIN_FILES="$BIN_FILES $i$EXE_SUFFIX"
done

for i in $O; do
    OBJ_FILES="$OBJ_FILES $i$OBJ_SUFFIX"
done

LIB_FILES=$L



# ***********************
# * Version & Copyright *
# ***********************

echo "$PKG_NAME" >VERSION
echo "$PKG_NAME" >../VERSION

echo "$PROLOG_VERSION" >/tmp/version_no.tex
if diff /tmp/version_no.tex ../doc/version_no.tex >/dev/null 2>&1; then
    rm /tmp/version_no.tex
else
    mv /tmp/version_no.tex ../doc/version_no.tex
fi

echo "$PROLOG_COPYRIGHT" >/tmp/copyright.tex
if diff /tmp/copyright.tex ../doc/copyright.tex >/dev/null 2>&1; then
    rm /tmp/copyright.tex
else
    mv /tmp/copyright.tex ../doc/copyright.tex
fi



# ********************
# * Files generation *
# ********************

OTHER_MAKEFILES=
for i in TestsPl/Makefile DevUtils/Makefile Ma2Asm/FromC/Makefile Win32/Makefile Win32/gp-setup.iss
do
    if test -f $i.in; then
        OTHER_MAKEFILES="$OTHER_MAKEFILES $i"
    fi
done

AC_CONFIG_HEADER(EnginePl/gp_config.h)
AC_CONFIG_FILES(Makefile
                TopComp/Makefile
                Pl2Wam/Makefile
                Wam2Ma/Makefile
                Ma2Asm/Makefile
                Fd2C/Makefile
                Linedit/Makefile
                W32GUICons/Makefile
                EnginePl/Makefile
                BipsPl/Makefile
                EngineFD/Makefile
                BipsFD/Makefile
                $OTHER_MAKEFILES)
AC_OUTPUT



