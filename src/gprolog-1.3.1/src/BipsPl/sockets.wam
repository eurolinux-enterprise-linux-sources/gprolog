% compiler: GNU Prolog 1.3.1 (Feb 10 2009)
% file    : sockets.pl
% date    : 2 10 2009
% time    : 13:54:40


file_name('/home/diaz/GP/src/src/BipsPl/sockets.pl').


predicate('$use_sockets'/0,29,static,private,built_in,[
    proceed]).


predicate(socket/2,32,static,private,built_in,[
    put_atom(socket,2),
    put_integer(2,3),
    call_c('Pl_Set_Bip_Name_2',[],[x(2),x(3)]),
    call_c('Pl_Socket_2',[boolean],[x(0),x(1)]),
    proceed]).


predicate(socket_close/1,39,static,private,built_in,[
    put_atom(socket_close,1),
    put_integer(1,2),
    call_c('Pl_Set_Bip_Name_2',[],[x(1),x(2)]),
    call_c('Pl_Socket_Close_1',[boolean],[x(0)]),
    proceed]).


predicate(socket_bind/2,46,static,private,built_in,[
    put_atom(socket_bind,2),
    put_integer(2,3),
    call_c('Pl_Set_Bip_Name_2',[],[x(2),x(3)]),
    call_c('Pl_Socket_Bind_2',[boolean],[x(0),x(1)]),
    proceed]).


predicate(socket_connect/4,53,static,private,built_in,[
    allocate(5),
    get_variable(y(0),0),
    get_variable(y(1),1),
    get_variable(y(2),3),
    put_atom(socket_connect,0),
    put_integer(4,1),
    call_c('Pl_Set_Bip_Name_2',[],[x(0),x(1)]),
    put_value(x(2),0),
    put_variable(y(3),1),
    call('$get_open_stm'/2),
    put_value(y(2),0),
    put_variable(y(4),1),
    call('$get_open_stm'/2),
    put_value(y(0),0),
    put_value(y(1),1),
    put_unsafe_value(y(3),2),
    put_unsafe_value(y(4),3),
    deallocate,
    call_c('Pl_Socket_Connect_4',[boolean],[x(0),x(1),x(2),x(3)]),
    proceed]).


predicate(socket_listen/2,62,static,private,built_in,[
    put_atom(socket_listen,2),
    put_integer(2,3),
    call_c('Pl_Set_Bip_Name_2',[],[x(2),x(3)]),
    call_c('Pl_Socket_Listen_2',[boolean],[x(0),x(1)]),
    proceed]).


predicate(socket_accept/3,69,static,private,built_in,[
    allocate(4),
    get_variable(y(0),0),
    get_variable(y(1),2),
    put_atom(socket_accept,0),
    put_integer(3,2),
    call_c('Pl_Set_Bip_Name_2',[],[x(0),x(2)]),
    put_value(x(1),0),
    put_variable(y(2),1),
    call('$get_open_stm'/2),
    put_value(y(1),0),
    put_variable(y(3),1),
    call('$get_open_stm'/2),
    put_value(y(0),0),
    put_void(1),
    put_unsafe_value(y(2),2),
    put_unsafe_value(y(3),3),
    deallocate,
    call_c('Pl_Socket_Accept_4',[boolean],[x(0),x(1),x(2),x(3)]),
    proceed]).


predicate(socket_accept/4,76,static,private,built_in,[
    allocate(6),
    get_variable(y(0),0),
    get_variable(y(1),1),
    get_variable(y(2),2),
    get_variable(y(3),3),
    put_atom(socket_accept,0),
    put_integer(4,1),
    call_c('Pl_Set_Bip_Name_2',[],[x(0),x(1)]),
    put_value(y(1),0),
    call('$socket_accept/4_$aux1'/1),
    put_value(y(2),0),
    put_variable(y(4),1),
    call('$get_open_stm'/2),
    put_value(y(3),0),
    put_variable(y(5),1),
    call('$get_open_stm'/2),
    put_value(y(0),0),
    put_value(y(1),1),
    put_unsafe_value(y(4),2),
    put_unsafe_value(y(5),3),
    deallocate,
    call_c('Pl_Socket_Accept_4',[boolean],[x(0),x(1),x(2),x(3)]),
    proceed]).


predicate('$socket_accept/4_$aux1'/1,76,static,private,built_in,[
    load_cut_level(1),
    try_me_else(1),
    call_c('Blt_Var',[fast_call,boolean],[x(0)]),
    cut(x(1)),
    proceed,

label(1),
    trust_me_else_fail,
    put_value(x(0),1),
    put_atom(variable,0),
    execute('$pl_err_type'/2)]).


predicate('$assoc_socket_streams'/3,89,static,private,built_in,[
    allocate(4),
    get_variable(y(0),0),
    get_variable(y(1),2),
    put_atom('$assoc_socket_streams',0),
    put_integer(3,2),
    call_c('Pl_Set_Bip_Name_2',[],[x(0),x(2)]),
    put_value(x(1),0),
    put_variable(y(2),1),
    call('$get_open_stm'/2),
    put_value(y(1),0),
    put_variable(y(3),1),
    call('$get_open_stm'/2),
    put_value(y(0),0),
    put_unsafe_value(y(2),1),
    put_unsafe_value(y(3),2),
    deallocate,
    call_c('Pl_Assoc_Socket_Streams_3',[boolean],[x(0),x(1),x(2)]),
    proceed]).


predicate(hostname_address/2,98,static,private,built_in,[
    put_atom(hostname_address,2),
    put_integer(2,3),
    call_c('Pl_Set_Bip_Name_2',[],[x(2),x(3)]),
    call_c('Pl_Hostname_Address_2',[boolean],[x(0),x(1)]),
    proceed]).
