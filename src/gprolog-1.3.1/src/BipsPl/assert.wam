% compiler: GNU Prolog 1.3.1 (Feb 10 2009)
% file    : assert.pl
% date    : 2 10 2009
% time    : 13:54:39


file_name('/home/diaz/GP/src/src/BipsPl/assert.pl').


predicate('$use_assert'/0,29,static,private,built_in,[
    proceed]).


predicate(asserta/1,32,static,private,built_in,[
    put_atom(asserta,1),
    put_integer(1,2),
    call_c('Pl_Set_Bip_Name_2',[],[x(1),x(2)]),
    put_integer(1,1),
    put_integer(1,2),
    execute('$assert'/3)]).


predicate(assertz/1,39,static,private,built_in,[
    put_atom(assertz,1),
    put_integer(1,2),
    call_c('Pl_Set_Bip_Name_2',[],[x(1),x(2)]),
    put_integer(0,1),
    put_integer(1,2),
    execute('$assert'/3)]).


predicate('$assert'/3,46,static,private,built_in,[
    try_me_else(1),
    allocate(5),
    get_variable(y(0),1),
    get_variable(y(1),2),
    put_variable(y(2),1),
    put_variable(y(3),2),
    call('$get_head_and_body'/3),
    put_value(y(3),0),
    put_atom(none,1),
    put_variable(y(4),2),
    call('$term_to_goal'/3),
    put_unsafe_value(y(2),0),
    put_unsafe_value(y(4),1),
    put_value(y(0),2),
    put_value(y(1),3),
    call_c('Pl_Assert_4',[],[x(0),x(1),x(2),x(3)]),
    fail,

label(1),
    trust_me_else_fail,
    proceed]).


predicate(retract/1,57,static,private,built_in,[
    allocate(2),
    put_atom(retract,1),
    put_integer(1,2),
    call_c('Pl_Set_Bip_Name_2',[],[x(1),x(2)]),
    put_variable(y(0),1),
    put_variable(y(1),2),
    call('$get_head_and_body'/3),
    put_unsafe_value(y(0),0),
    put_unsafe_value(y(1),1),
    deallocate,
    execute('$retract'/2)]).


predicate('$retract'/2,63,static,private,built_in,[
    call_c('Pl_Retract_2',[boolean],[x(0),x(1)]),
    proceed]).


predicate(retractall/1,69,static,private,built_in,[
    load_cut_level(1),
    try_me_else(1),
    put_atom(retractall,2),
    put_integer(1,3),
    call_c('Pl_Set_Bip_Name_2',[],[x(2),x(3)]),
    call_c('Pl_Retractall_If_Empty_Head_1',[boolean],[x(0)]),
    cut(x(1)),
    proceed,

label(1),
    retry_me_else(2),
    allocate(0),
    put_void(1),
    call('$retract'/2),
    fail,

label(2),
    trust_me_else_fail,
    proceed]).


predicate('$retract_last_found'/0,82,static,private,built_in,[
    call_c('Pl_Retract_Last_Found_0',[],[]),
    proceed]).


predicate(clause/2,87,static,private,built_in,[
    allocate(2),
    get_variable(y(0),0),
    get_variable(y(1),1),
    put_atom(clause,0),
    put_integer(2,1),
    call_c('Pl_Set_Bip_Name_2',[],[x(0),x(1)]),
    put_value(y(0),0),
    call('$check_head'/1),
    put_value(y(0),0),
    put_value(y(1),1),
    put_integer(0,2),
    deallocate,
    execute('$clause'/3)]).


predicate('$clause'/3,93,static,private,built_in,[
    call_c('Pl_Clause_3',[boolean],[x(0),x(1),x(2)]),
    proceed]).


predicate('$instance_for_setarg'/2,99,static,private,built_in,[
    put_integer(0,2),
    call_c('Pl_Clause_3',[boolean],[x(0),x(1),x(2)]),
    proceed]).


predicate('$setarg_in_last_found'/2,102,static,private,built_in,[
    call_c('Pl_Setarg_Of_Last_Found_2',[],[x(0),x(1)]),
    proceed]).


predicate(abolish/1,107,static,private,built_in,[
    put_atom(abolish,1),
    put_integer(1,2),
    call_c('Pl_Set_Bip_Name_2',[],[x(1),x(2)]),
    call_c('Pl_Abolish_1',[],[x(0)]),
    proceed]).


predicate('$remove_predicate'/2,114,static,private,built_in,[
    call_c('Pl_Remove_Predicate_2',[],[x(0),x(1)]),
    proceed]).


predicate('$scan_dyn_test_alt'/0,120,static,private,built_in,[
    call_c('Pl_Scan_Dynamic_Pred_Alt_0',[boolean],[]),
    proceed]).


predicate('$scan_dyn_jump_alt'/0,123,static,private,built_in,[
    call_c('Pl_Scan_Dynamic_Pred_Alt_0',[jump],[]),
    proceed]).
